[{"D:\\NEEK\\React\\reacttodos\\src\\index.js":"1","D:\\NEEK\\React\\reacttodos\\src\\App.js":"2","D:\\NEEK\\React\\reacttodos\\src\\Todos.js":"3"},{"size":253,"mtime":1688284757530,"results":"4","hashOfConfig":"5"},{"size":1348,"mtime":1688361656162,"results":"6","hashOfConfig":"5"},{"size":1451,"mtime":1688305473371,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9i7die",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"D:\\NEEK\\React\\reacttodos\\src\\index.js",[],[],"D:\\NEEK\\React\\reacttodos\\src\\App.js",["19"],[],"import {useState, useRef} from 'react'\nimport Todos from './Todos'\nexport default function App() {\n  const [Update, toUpdate] = useState(true)\n  const name = useRef(null)\n  const task = useRef(null)\n  function createTodo() {\n    if(name.current != null && task.current != null){\n      let inputs = [document.querySelector('input'), document.querySelector('textarea')]\n      Array.from(inputs).map(el=>el.value='')\n      let key = Math.random()*1000\n      localStorage.setItem(key, `${name.current}${key}${task.current}`)\n      toUpdate(!Update)\n      name.current = null\n      task.current = null\n    }\n    else return false\n  }\n  return (\n    <>\n      <div className=\"todos\">\n        <div className=\"input\">\n          <div className=\"input__inputs\">\n            <input onChange={e=>{name.current = e.currentTarget.value}} maxLength=\"25\" type=\"text\" className=\"input__inputs__name\" placeholder=\"Название\" />\n            <textarea onChange={e=>{task.current = e.currentTarget.value}} maxLength=\"230\" className=\"input__inputs__task\" placeholder=\"Задание\"></textarea>\n          </div>\n          <div className='input__buttonContent'>\n            <button onClick={createTodo} className=\"input__create\"><img className=\"input__create__img\" src=\"./add.png\"/></button>\n          </div>\n        </div>\n      </div>\n      <Todos />\n    </>);\n}","D:\\NEEK\\React\\reacttodos\\src\\Todos.js",["20"],[],"import { useState } from 'react'\r\nexport default function Todos() {\r\n    const todos = []\r\n    const [Update, toUpdate] = useState(true)\r\n    for(let i=0; i<localStorage.length; i++){\r\n        let key = localStorage.key(i)\r\n        let content = localStorage.getItem(key).split(key)\r\n        todos.push({key: key, name: content[0], task: content[1]})\r\n    }\r\n    console.log(todos)\r\n    let render = []\r\n    render = todos.map((el)=>{\r\n        return(\r\n            <>\r\n                <li className=\"todos\" key={el.key}>\r\n                    <div className=\"listElement\">\r\n                        <div className=\"listElement__elements\">\r\n                            <h1 className=\"listElement__elements__name\">{el.name}</h1>\r\n                            <p className=\"listElement__elements__task\">{el.task}</p>\r\n                        </div>\r\n                        <div className='DeleteButtonContent'>\r\n                            <button onClick={()=>{localStorage.removeItem(el.key); toUpdate(!Update)}}><img className='DeleteButton' src='./delete.png'/></button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </>\r\n        )\r\n    })\r\n    return(\r\n        <>\r\n            <ul>{render}</ul>\r\n            <div className={'ClearBtnContent'}>\r\n                <button className={'ClearBtn'} onClick={()=>{localStorage.clear(); toUpdate(!Update)}}>Clear</button>\r\n            </div>\r\n        </>)\r\n}\r\n",{"ruleId":"21","severity":1,"message":"22","line":28,"column":68,"nodeType":"23","endLine":28,"endColumn":121},{"ruleId":"21","severity":1,"message":"22","line":22,"column":104,"nodeType":"23","endLine":22,"endColumn":154},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]